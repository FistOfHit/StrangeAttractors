function[fractal_dim] = Lyapunov_dim(a, b, c, force1, force2, irr_freq)
% Function to calculate Lyapunov Dimension of attractor generated by parameters given
%
% Inputs:
% a = -1*Damping strength
% b = Linear stiffness
% c = non-linearity in restoring force
% force1 = amplitude of force in rational frequency driving force (2*pi Hz)
% force2 = amplitude of force in irrational frequecy driving force (2*pi*irr_freq) Hz)
% irr_freq = value of irrational driving frequency 
% init_cond = initial conditions for dynamical system
%
% Outputs:
% fractal_dim = estimate of fractal dimension based on KY-conjecture
%
% Figures:
% Plot of poincare section in 3D with transients removed
%
% Here, the exponents calculated by the Lyapunov_exponents function are ordered and then the results
% of the Kaplan-Yorke conjecture are applied to calculate an estimate of the Lyapunov dimension of
% the attractor. For more information on all this, check out the final report in this repository. In
% summary however, the ordered exponents are summed until the sum is negative, at which point we
% stop and find the index in the array of ordered exponents. After this, the main result of the KY
% conjecture is applied and we have our estimate. In the unlikely case that the user inputs
% force2 = 0, the dimension will be reduced by one as now, tau does not exist and hence we have a 3D
% Dynamical system only giving 3 lyapunov exponents instead of 4. Additionally, the attractor with 
% transients (first 10% of iterations) removed is plotted.
    
    % Getting attractor data
    [pos, speed, tau_array] = Create_attractor(a, b, c, force1, force2, irr_freq, 10^5);
    
    exponents = Lyapunov_exponents(a, b, c, force1, force2, irr_freq);
    ordered_exponents = sort(exponents(1 : 3), 'descend');
    disp(ordered_exponents)
    
    % finding the sum and the index exactly when the sum becomes negative
    sum = 0;
    for i = 1 : 3
        sum = sum + ordered_exponents(i);
        if sum < 0
            sum = sum - ordered_exponents(i);
            break;
        end      
    end
    
    % by Kaplan - Yorke conjecture
    fractal_dim = (i - 1) + (sum/abs(ordered_exponents(i)));
    
    numPoints = length(pos);
    % if force2 = 0 pretend tau never existed, else it does.
    if force2 == 0
        fractal_dim = fractal_dim - 1;
    end
    
    plot3(pos(0.1*numPoints : numPoints), speed(0.1*numPoints : numPoints),...
          tau_array(0.1*numPoints : numPoints), '+', 'MarkerSize', 0.1);
    xlabel('x');
    ylabel('dx/dt');
    zlabel('tau');
    title('Poincare section at t = 2*pi');
    
end